const { create } = require('xmlbuilder2');

const generateVerifcationRequestXml= (jsonInput) => {
  const xmlDoc = create({ version: '1.0', encoding: 'UTF-8', standalone: true })
    .ele('FPEnvelope', {
      'xmlns:header': 'urn:iso:std:iso:20022:tech:xsd:head.001.001.03',
      'xmlns:document': 'urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03',
      'xmlns': 'urn:iso:std:iso:20022:tech:xsd:verification_request'
    })
    .ele('header:AppHdr')
    .ele('header:Fr')
    .ele('header:FIId')
    .ele('header:FinInstnId')
    .ele('header:Othr')
    .ele('header:Id').txt(jsonInput.FromFinInstnId).up().up().up().up().up()
    .ele('header:To')
    .ele('header:FIId')
    .ele('header:FinInstnId')
    .ele('header:Othr')
    .ele('header:Id').txt(jsonInput.ToFinInstnId).up().up().up().up().up()
    .ele('header:BizMsgIdr').txt(jsonInput.BizMsgIdr).up()
    .ele('header:MsgDefIdr').txt(jsonInput.MsgDefIdr).up()
    .ele('header:CreDt').txt(jsonInput.CreDt).up().up()
    .ele('document:Document')
    .ele('document:IdVrfctnReq')
    .ele('document:Assgnmt')
    .ele('document:MsgId').txt(jsonInput.MsgId).up()
    .ele('document:CreDtTm').txt(jsonInput.CreDtTm).up()
    .ele('document:Assgnr')
    .ele('document:Agt')
    .ele('document:FinInstnId')
    .ele('document:Othr')
    .ele('document:Id').txt(jsonInput.FromFinInstnId).up().up().up().up().up()
    .ele('document:Assgne')
    .ele('document:Agt')
    .ele('document:FinInstnId')
    .ele('document:Othr')
    .ele('document:Id').txt(jsonInput.ToFinInstnId).up().up().up().up().up().up()
    .ele('document:Vrfctn')
    .ele('document:Id').txt(jsonInput.VrfctnId).up()
    .ele('document:PtyAndAcctId')
    .ele('document:Acct')
    .ele('document:Id')
    .ele('document:Othr')
    .ele('document:Id').txt(jsonInput.account_number).up()
    .ele('document:SchmeNm')
    .ele('document:Prtry').txt(jsonInput.ToFinInstnId);

  // Convert the XML document to string format with XML declaration
  const xmlString = xmlDoc.end({ prettyPrint: true });
  return xmlString;
};

const generatePaymentRequestXml = (PaymentInfo) => {
    const xmlDoc = create({ version: '1.0', encoding: 'UTF-8', standalone: true })
        .ele('FPEnvelope', {
            xmlns: 'urn:iso:std:iso:20022:tech:xsd:payment_request',
            'xmlns:header': 'urn:iso:std:iso:20022:tech:xsd:head.001.001.03',
            'xmlns:document': 'urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'
        })
        .ele('header:AppHdr')
            .ele('header:Fr')
                .ele('header:FIId')
                    .ele('header:FinInstnId')
                        .ele('header:Othr')
                            .ele('header:Id').txt(PaymentInfo.FromFinInstnId).up()
                        .up()
                    .up()
                .up()
            .up()
            .ele('header:To')
                .ele('header:FIId')
                    .ele('header:FinInstnId')
                        .ele('header:Othr')
                            .ele('header:Id').txt(PaymentInfo.ToFinInstnId).up()
                        .up()
                    .up()
                .up()
            .up()
            .ele('header:BizMsgIdr').txt(PaymentInfo.BizMsgIdr).up()
            .ele('header:MsgDefIdr').txt(PaymentInfo.MsgDefIdr).up()
            .ele('header:CreDt').txt(PaymentInfo.CreDt).up()
        .up()
        .ele('document:Document')
            .ele('document:FIToFICstmrCdtTrf')
                .ele('document:GrpHdr')
                    .ele('document:MsgId').txt(PaymentInfo.MsgId).up()
                    .ele('document:CreDtTm').txt(PaymentInfo.CreDtTm).up()
                    .ele('document:NbOfTxs').txt(PaymentInfo.NbOfTxs).up()
                    .ele('document:SttlmInf')
                        .ele('document:SttlmMtd').txt(PaymentInfo.SttlmMtd).up()
                        .ele('document:ClrSys')
                            .ele('document:Prtry').txt(PaymentInfo.ClrSysPrtry).up()
                        .up()
                    .up()
                    .ele('document:PmtTpInf')
                        .ele('document:LclInstrm')
                            .ele('document:Prtry').txt(PaymentInfo.PmtTpInfPrtry).up()
                        .up()
                    .up()
                    .ele('document:InstgAgt')
                        .ele('document:FinInstnId')
                            .ele('document:Othr')
                                .ele('document:Id').txt(PaymentInfo.FromFinInstnId).up()
                            .up()
                        .up()
                    .up()
                    .ele('document:InstdAgt')
                        .ele('document:FinInstnId')
                            .ele('document:Othr')
                                .ele('document:Id').txt(PaymentInfo.ToFinInstnId).up()
                            .up()
                        .up()
                    .up()
                .up()
                .ele('document:CdtTrfTxInf')
                    .ele('document:PmtId')
                        .ele('document:EndToEndId').txt(`ABAYETAA${Math.floor(Math.random() * 100000000).toString().padStart(8, '0')}`).up()
                        .ele('document:TxId').txt(`ABAYETAA${Math.floor(Math.random() * 10000000000000).toString().padStart(13, '0')}`).up()
                    .up()
                    .ele('document:IntrBkSttlmAmt', { Ccy: PaymentInfo.CcyFrom }).txt(PaymentInfo.amount).up()
                    .ele('document:AccptncDtTm').txt(PaymentInfo.CreDtTm).up()
                    .ele('document:InstdAmt', { Ccy: PaymentInfo.CcyTo}).txt(PaymentInfo.amount).up()
                    .ele('document:ChrgBr').txt('SLEV').up()
                    .ele('document:Dbtr')
                        .ele('document:Nm').txt(PaymentInfo.DbtrNm).up()
                        .ele('document:PstlAdr')
                            .ele('document:AdrLine').txt(PaymentInfo.AdrLine).up()
                        .up()
                    .up()
                    .ele('document:DbtrAcct')
                        .ele('document:Id')
                            .ele('document:Othr')
                                .ele('document:Id').txt(PaymentInfo.DbtrAcctId).up()
                                .ele('document:SchmeNm')
                                    .ele('document:Prtry').txt(PaymentInfo.DbtrAcctPrtry).up()
                                .up()
                                .ele('document:Issr').txt(PaymentInfo.DbtrAgtIssr).up()
                            .up()
                        .up()
                    .up()
                    .ele('document:DbtrAgt')
                        .ele('document:FinInstnId')
                            .ele('document:Othr')
                                .ele('document:Id').txt(PaymentInfo.DbtrAgtId).up()
                                .ele('document:Issr').txt(PaymentInfo.DbtrAcctIssr).up()
                            .up()
                        .up()
                    .up()
                    .ele('document:CdtrAgt')
                        .ele('document:FinInstnId')
                            .ele('document:Othr')
                                .ele('document:Id').txt(PaymentInfo.CdtrAgtId).up()
                            .up()
                        .up()
                    .up()
                    .ele('document:Cdtr')
                        .ele('document:Nm').txt(PaymentInfo.CdtrNm).up()
                    .up()
                    .ele('document:CdtrAcct')
                        .ele('document:Id')
                            .ele('document:Othr')
                                .ele('document:Id').txt(PaymentInfo.CdtrAcctId).up()
                                .ele('document:SchmeNm')
                                    .ele('document:Prtry').txt(PaymentInfo.CdtrAcctPrtry).up()
                                .up()
                            .up()
                        .up()
                    .up()
                    .ele('document:RmtInf')
                        .ele('document:Ustrd').txt(PaymentInfo.RmtInfUstrd).up()
                    .up()
                .up()
            .up()
        .up()
    .end({ prettyPrint: true });

    return xmlDoc;
};

module.exports = {
  generateVerifcationRequestXml,generatePaymentRequestXml
};
