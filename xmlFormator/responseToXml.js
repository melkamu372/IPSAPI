const { create } = require('xmlbuilder');

const generateVerificationXmlResponse = (jsonInput) => {
  const xmlDoc = create({ version: '1.0', encoding: 'UTF-8', standalone: true })
    .ele('FPEnvelope', {
      'xmlns:header': 'urn:iso:std:iso:20022:tech:xsd:head.001.001.03',
      'xmlns:document': 'urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03',
      'xmlns': 'urn:iso:std:iso:20022:tech:xsd:verification_response'
    })
    .ele('header:AppHdr')
      .ele('header:Fr')
        .ele('header:FIId')
          .ele('header:FinInstnId')
            .ele('header:Othr')
              .ele('header:Id').txt(jsonInput.hdrOrginatorFIBic).up().up().up().up().up()
      .ele('header:To')
        .ele('header:FIId')
          .ele('header:FinInstnId')
            .ele('header:Othr')
              .ele('header:Id').txt(jsonInput.hdrDestinationFIBic).up().up().up().up().up()
      .ele('header:BizMsgIdr').txt(jsonInput.hdrBizMsgId).up()
      .ele('header:MsgDefIdr').txt('acmt.024.001.03').up()
      .ele('header:CreDt').txt(jsonInput.hdrMsgCreatedDateZoned).up()
      .ele('header:Rltd')
        .ele('header:Fr')
          .ele('header:FIId')
            .ele('header:FinInstnId')
              .ele('header:Othr')
                .ele('header:Id').txt(jsonInput.ltdOrginatorFIBic).up().up().up().up().up()
        .ele('header:To')
          .ele('header:FIId')
            .ele('header:FinInstnId')
              .ele('header:Othr')
                .ele('header:Id').txt(jsonInput.ltdDestinationFIBic).up().up().up().up().up()
        .ele('header:BizMsgIdr').txt(jsonInput.ltdBizMsgId).up()
        .ele('header:MsgDefIdr').txt('acmt.023.001.03').up()
        .ele('header:CreDt').txt(jsonInput.ltdMsgCreatedDateZoned).up().up().up().up()
    .ele('document:Document')
      .ele('document:IdVrfctnRpt')
        .ele('document:Assgnmt')
          .ele('document:MsgId').txt(jsonInput.bdyMgId).up()
          .ele('document:CreDtTm').txt(jsonInput.bdyMsgCreatedDateZoned).up()
          .ele('document:Assgnr')
            .ele('document:Agt')
              .ele('document:FinInstnId')
                .ele('document:Othr')
                  .ele('document:Id').txt(jsonInput.bdyOrginatorFIBic).up().up().up().up().up()
          .ele('document:Assgne')
            .ele('document:Agt')
              .ele('document:FinInstnId')
                .ele('document:Othr')
                  .ele('document:Id').txt(jsonInput.bdyDestinationFIBic).up().up().up().up().up().up().up()
        .ele('document:OrgnlAssgnmt')
          .ele('document:MsgId').txt(jsonInput.orginalMsgId).up()
          .ele('document:CreDtTm').txt(jsonInput.orgMsgCreatedDateZoned).up().up()
        .ele('document:Rpt')
          .ele('document:OrgnlId').txt(jsonInput.orginalTransactionId).up()
          .ele('document:Vrfctn').txt(jsonInput.isSuccess).up()
          .ele('document:Rsn')
            .ele('document:Prtry').txt(jsonInput.statusMessage).up().up()
          .ele('document:OrgnlPtyAndAcctId')
            .ele('document:Acct')
              .ele('document:Id')
                .ele('document:Othr')
                  .ele('document:Id').txt(jsonInput.accountToBeVerified).up()
                  .ele('document:SchmeNm')
                    .ele('document:Prtry').txt(jsonInput.accountTypeToBeVerified).up().up().up().up().up()
          .ele('document:UpdtdPtyAndAcctId')
            .ele('document:Pty')
              .ele('document:Nm').txt(jsonInput.verifiedAccountHolderName).up().up()
            .ele('document:Acct')
              .ele('document:Id')
                .ele('document:Othr')
                  .ele('document:Id').txt(jsonInput.accountVerified).up()
                  .ele('document:SchmeNm')
                    .ele('document:Prtry').txt(jsonInput.accountTypeVerified).up().up().up().up().up().up().up().up().up();

  return xmlDoc.end({ prettyPrint: true });
};

module.exports = {generateVerificationXmlResponse};
